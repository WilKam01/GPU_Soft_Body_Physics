#version 450

#define g -9.82

layout(set = 0, binding = 0) uniform UBO
{
    float deltaTime;
} ubo;

struct Particle
{
    vec4 position;
    vec4 velocity;
};

layout(std140, set = 0, binding = 1) buffer ParticlesSSBO
{
	Particle particles[];
};

layout(std140, set = 0, binding = 2) buffer PositionsSSBO
{
	vec4 positions[];
};

layout(local_size_x = 1) in;

void main()
{
	uint index = gl_GlobalInvocationID.x;
	particles[index].velocity += vec4(0.0, 1.0, 0.0, 0.0) * ubo.deltaTime * g;
	particles[index].position = positions[index];
	positions[index] += particles[index].velocity * ubo.deltaTime;

	// Hit ground
	if(positions[index].y < 0.0)
	{
		positions[index] = particles[index].position;
		positions[index].y = 0.0;
	}
}