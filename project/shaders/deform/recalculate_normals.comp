#version 450
#extension GL_EXT_shader_atomic_float : enable

layout(set = 0, binding = 0) uniform InfoUBO
{
    uint vertexCount;
    uint indexCount;
} info;

layout(std140, set = 0, binding = 1) buffer VertexPositionsSSBO
{
	vec3 vertexPositions[];
};
layout(std140, set = 0, binding = 2) buffer VertexNormalsSSBO
{
	vec3 vertexNormals[];
};
layout(std430, set = 0, binding = 3) buffer IndicesSSBO
{
	uint indices[];
};

layout(local_size_x = 32) in;

void main()
{
	uint index = gl_GlobalInvocationID.x * 3;
	if(index >= info.indexCount)
		return;

	vec3 e1 = vertexPositions[indices[index + 1]] - vertexPositions[indices[index]];
	vec3 e2 = vertexPositions[indices[index + 2]] - vertexPositions[indices[index]];
	vec3 normal = normalize(cross(e1, e2));

	for(int i = 0; i < 3; i++)
	{
		atomicAdd(vertexNormals[indices[index + 0]][i], normal[i]);
		atomicAdd(vertexNormals[indices[index + 1]][i], normal[i]);
		atomicAdd(vertexNormals[indices[index + 2]][i], normal[i]);
	}
}